
load(26,21);
load(27,22);
load(28,23);


load(7,1);
load(8,2);
load(23,17);
load(24,18);
[READY_LIST+0]=0;
PTBR=1024;
PTLR=4;

[PTBR+0]=21;
[PTBR+1]="00";
[PTBR+2]=22;
[PTBR+3]="00";
[PTBR+4]=23;
[PTBR+5]="00";
[PTBR+6]=28;
[PTBR+7]="01";

[READY_LIST+5]=PTBR;
[READY_LIST+6]=PTLR;
SP=3*512;
load(11,5);
load(12,6);
load(5,19);
load(6,20);
load(9,3);
load(10,4);
load(13,7);
load(14,8);
load(15,9);
load(16,10);
load(17,11);
load(18,12);
load(19,13);
load(20,14);
load(21,15);
load(22,16);
[28*512]=0;
alias counter S0;			
counter = 0;
while ( counter <  128) do			// 64 entries, each of size 2 words
	[ FILE_TABLE + counter + 0] = -1;	// Set FAT Index to -1
	[ FILE_TABLE + counter + 1] =  0;	// Set File Open Count to 0
	counter = counter + 2;			// Move to next entry
endwhile;			
alias p S0;
alias i S1;
i=0;
while(i<16) do
   [1536+15+i]=-1;
   [1536+15+i+1]=-1;
   i=i+2;
endwhile;

i=0;
while(i<64) do
   if i<=24 then
      [MEM_LIST+i]=1;
   endif;
   if i>24 then
      [MEM_LIST+i]=0;
    endif;
    i=i+1;
 endwhile;


[MEM_LIST+28]=1;

i=0;
while(i<32) do
   [READY_LIST+i*32+1]=0;
   i=i+1;
endwhile;

i=448;
while(i<512) do
    [DISK_LIST+i]=0;
    i=i+1;
endwhile;
store(6,20);

[READY_LIST+31]=0;
[READY_LIST+1]=2;
ireturn;

