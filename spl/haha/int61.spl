alias physicalsp S0;
physicalsp=[PTBR+6]*512+(SP%512);

alias syscallno S1;
syscallno=[physicalsp-1];			//syscallno

if(syscallno==9) then

	alias filename S2;
	filename=[physicalsp-3];			//argument file name
	alias i S3;
	i=0;
	while(i<64) do
		if([FAT+8*i]==filename) then		//searching fat for file name
			break;							
		endif;
		i=i+1;
	endwhile;								

	if(i==64) then
		[physicalsp-2]=-1;					//if not found returning -1
		ireturn;
	endif;

	load(1,[FAT+8*i+2]);
	i=0;
	while(i<3) do
		if([PTBR+2*i+1]=="11"||[PTBR+2*i+1]=="01")then
 			[MEM_LIST+[PTBR+2*i]]=[MEM_LIST+[PTBR+2*i]]-1;
		endif;
		if([PTBR+2*i+1]=="00" && [PTBR+2*i]>=448)then
  			[DISK_LIST+[PTBR+2*i]]=[DISK_LIST+[PTBR+2*i]]-1;
			store(6,20);
		endif;
		i=i+1;
	endwhile;	

	
	i=0;
	while(i<3)do
		if([512+i]!=-1)then
			[PTBR+2*i]=[512+i];
			[PTBR+2*i+1]="00";
		else
			[PTBR+2*i]=-1;
			[PTBR+2*i+1]="00";
		endif;
		i=i+1;
	endwhile;
	
	[PTBR+7]="01";	


	alias pid S6;
	pid=(PTBR-1024)/8;

	i=0;
	while(i<=7) do
		if([READY_LIST+32*pid+15+2*i]!=-1) then
			alias systabindex S13;
			systabindex=[READY_LIST+32*pid+15+2*i];
			[FILE_TABLE+2*systabindex+1]=[FILE_TABLE+2*systabindex+1]-1;
			if([FILE_TABLE+2*systabindex+1]==0) then
				[FILE_TABLE+2*systabindex]=-1;
				[FILE_TABLE+2*systabindex+1]=0;
			endif;
			[READY_LIST+32*pid+15+2*i]=-1;
			[READY_LIST+32*pid+15+2*i+1]=-1;
		endif;
		i=i+1;
	endwhile;

	SP=3*512;
	physicalsp=[PTBR+(2*SP/512)]*512+(SP%512);

	[physicalsp]=0;

	ireturn;

endif;

if(syscallno==11) then
	alias pid S11;
	pid = (PTBR-1024)/8;
	[physicalsp-2] = pid;
	ireturn;
endif;	

if(syscallno == 12) then
	alias parentpid S11;
	alias childpid S12;
	childpid = (PTBR-1024)/8;
	parentpid = [READY_LIST + 32*childpid + 31];
	[physicalsp-2]=parentpid;
	ireturn;
endif;		